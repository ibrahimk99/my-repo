<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0 auto;
    }
    h1, h2 {
        text-align: center;
    }
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px; /* Ensure table doesn't touch the header directly */
    }
    table, th, td {
        border: 1px solid #ddd;
    }
    th, td {
        padding: 8px;
        text-align: left;
    }
    th {
        background-color: #f4f4f4;
    }
    form {
        margin-top: 5px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    input, select {
        padding: 8px;
      margin-right:17px ;
        width: 100%;
    }
    button {
        padding: 10px 20px;
        background-color: #28a745;
        color: white;
        border: none;
        cursor: pointer;
    }
    button:hover {
        background-color: #218838;
    }

    /* Fixing the header and forms at the top with z-index */
    .fixed-header {
        margin-top: 75px;
        position: fixed;
        top: 0;
        z-index: 0.5;
        background-color: white;
        padding: 10px 20px;
        border-bottom: 1px solid #ccc;
        width: 82.8%;
    }

    /* Add margin to the content below to prevent overlap with the fixed header */
    .main-content {
        margin-top: 270px; /* Adjust this based on the height of your fixed-header */
    }

</style>

<% layout("/layouts/boilerplate") %>
<title>Finance Management</title>
    <!-- Fixed Header with Balance and Forms -->
    <div class="fixed-header">
        <div style="display: flex;">  
            <h3>Income: <%= (totalIncome || 0).toFixed(2) %></h3>
            <h2 style="margin-left: auto;"> <b>Balance: <%= (remainingBalance || 0).toFixed(2) %></b></h2>
            <h3 style="margin-left: auto;">Outcome: <%= (totalOutcome || 0).toFixed(2) %></h3>
        </div>

        <!-- Filter Form -->
        <form method="GET" action="/finance">
            <div class="d-flex justify-content-start align-items-center mb-4">
                <label for="start_date" class="form-label">Start:</label>
                <input type="date" id="start_date" name="start_date" required class="form-control form-control-sm" style="width: 180px;">

                <label for="end_date" class="form-label">End:</label>
                <input type="date" id="end_date" name="end_date" required class="form-control form-control-sm" style="width: 180px;">

                <label for="description" class="form-label">Description:</label>
                <input type="text" id="description" name="description" placeholder="Search Description" class="form-control form-control-sm" style="width: 180px;">

                <button type="submit" class="btn btn-primary btn-sm" style="padding: 6px 12px;">Filter</button>
            </div>
        </form>

        <!-- Form to Add New Income/Outcome -->
        <form method="POST" action="/finance">
            <div class="d-flex justify-content-start align-items-center mb-4">
                <label for="type" class="form-label">Type:</label>
                <select name="type" required class="form-control form-control-sm" style="width: 180px;">
                    <option value="income">Income</option>
                    <option value="outcome">Outcome</option>
                </select>

                <label for="amount" class="form-label">Amount:</label>
                <input type="number" name="amount" placeholder="Amount" step="0.01" required class="form-control form-control-sm" style="width: 180px;">

                <label for="date" class="form-label">Date:</label>
                <input type="date" name="date" id="date" required class="form-control form-control-sm" style="width: 180px;">

                <label for="description" class="form-label">Description:</label>
                <input type="text" name="description" placeholder="Description" class="form-control form-control-sm" style="width: 180px;">

                <button type="submit" class="btn btn-primary btn-sm" style="padding: 6px 12px;">Add</button>
            </div>
        </form>
    </div>

    <!-- Main Content Below -->
    <div class="main-content">
        <!-- Records Table -->
        <table>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <% records.forEach(record => { %>
                    <tr id="record-<%= record.id %>" data-id="<%= record.id %>">
                        <td><%= new Date(record.date).toISOString().split('T')[0] %></td>
                        <td><%= record.type %></td>
                        <td><%= record.amount.toFixed(2) %></td>
                        <td><%= record.description || 'N/A' %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</body>
</html>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const rows = document.querySelectorAll('tr[data-id]');
        let timer;

        // Scroll to the bottom of the page on load
        window.scrollTo(0, document.body.scrollHeight);

        // Handle row deletion with long press
        rows.forEach(row => {
            row.addEventListener('mousedown', () => {
                timer = setTimeout(() => {
                    const id = row.dataset.id;
                    if (confirm('Do you want to delete this record?')) {
                        fetch(`/finance/${id}`, { method: 'DELETE' })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    row.remove(); // Remove the row from the DOM
                                    // Scroll to the bottom of the page after deletion
                                    window.scrollTo(0, document.body.scrollHeight);
                                } else {
                                    alert('Failed to delete record');
                                }
                            })
                            .catch(err => console.error('Error:', err));
                    }
                }, 100); // Long press duration: 1 second
            });

            row.addEventListener('mouseup', () => clearTimeout(timer));
            row.addEventListener('mouseleave', () => clearTimeout(timer));
        });

        // Automatically scroll to the bottom after form submission
        const form = document.querySelector('form[action="/finance"]');
        if (form) {
            form.addEventListener('submit', () => {
                setTimeout(() => {
                    window.scrollTo(0, document.body.scrollHeight);
                }, 100); // Adjust timeout to ensure DOM updates
            });
        }

        // Set default value of the date input to the current date
        const dateInput = document.getElementById('date');
        if (dateInput) {
            const currentDate = new Date().toISOString().split('T')[0];
            dateInput.value = currentDate;
        }
    });
</script>